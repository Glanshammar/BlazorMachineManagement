@using BlazorMachineManagement.Services
@inject MachineService MachineService
@inject NavigationManager NavigationManager

<EditForm Model="@machine" OnValidSubmit="HandleSubmit" FormName="machineDetailsForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="machine.Name" class="form-control" />
    </div>

    <div class="form-group">
        <label for="maxTemperature">Max Temperature:</label>
        <InputNumber id="maxTemperature" @bind-Value="machine.MaxTemperature" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">@(IsNewMachine ? "Add" : "Update") Machine</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [Parameter] public Machine machine { get; set; } = new Machine();
    [Parameter] public bool IsNewMachine { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnSave { get; set; }

    private async Task HandleSubmit()
    {
        try
        {
            bool success;
            if (IsNewMachine)
            {
                var machineData = new MachineDataDto
                {
                    Name = machine.Name,
                    IsOnline = false,
                    Temperature = 0,
                    ProductionRate = 0
                };
                success = await MachineService.CreateMachineAsync(machineData);
            }
            else
            {
                var machineData = new MachineDataDto
                {
                    Name = machine.Name,
                    IsOnline = machine.IsOnline,
                    Temperature = machine.Temperature,
                    ProductionRate = machine.ProductionRate
                };
                success = await MachineService.UpdateMachineAsync(machine.Id, machineData);
            }

            if (success)
            {
                await OnSave.InvokeAsync();
            }
            else
            {
                Console.WriteLine("Failed to save machine data");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async Task Cancel()
    {
        await OnCancel.InvokeAsync();
    }
}